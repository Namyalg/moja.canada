<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="timeseries_8cpp" kind="file" language="C++">
    <compoundname>timeseries.cpp</compoundname>
    <includes local="no">moja/logging.h</includes>
    <includes local="no">moja/exception.h</includes>
    <includes refid="timeseries_8h" local="yes">moja/modules/cbm/timeseries.h</includes>
    <includes local="no">cstring</includes>
    <includes local="no">Poco/Bugcheck.h</includes>
    <incdepgraph>
      <node id="6">
        <label>moja/modules/cbm/_modules.cbm_exports.h</label>
      </node>
      <node id="5">
        <label>moja/flint/itiming.h</label>
      </node>
      <node id="1">
        <label>/mnt/e/moja.canada/Source/moja.modules.cbm/src/timeseries.cpp</label>
        <link refid="timeseries_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="2">
        <label>moja/logging.h</label>
      </node>
      <node id="7">
        <label>boost/optional.hpp</label>
      </node>
      <node id="4">
        <label>moja/modules/cbm/timeseries.h</label>
        <link refid="timeseries_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cstring</label>
      </node>
      <node id="3">
        <label>moja/exception.h</label>
      </node>
      <node id="10">
        <label>Poco/Bugcheck.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep" prot="public">moja::modules::cbm::TimeSeries::TimeSeriesPrep</innerclass>
    <innernamespace refid="namespacemoja">moja</innernamespace>
    <innernamespace refid="namespacemoja_1_1modules">moja::modules</innernamespace>
    <innernamespace refid="namespacemoja_1_1modules_1_1cbm">moja::modules::cbm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;moja/logging.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moja/exception.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timeseries_8h" kindref="compound">moja/modules/cbm/timeseries.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Poco/Bugcheck.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemoja" kindref="compound">moja</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">modules<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemoja_1_1modules_1_1cbm" kindref="compound">cbm</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep" kindref="compound">TimeSeries::TimeSeriesPrep</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1adfaa31d0e0f4c0f73a451d8070f44fc9" kindref="member">TimeSeriesPrep</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a053851026a324264e4363f3c927a392f" kindref="member">yr0</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a77027adcc18d71e47158eea9e5953fb7" kindref="member">dataPerYr</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a7c37cc7fcf24c945bd184a1945cf7a40" kindref="member">nYrs</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a0de6deae23908d6e4a549eae2dff9479" kindref="member">subSame</ref>,<sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1a1b96f379826983db8a9aa86f44e592c3" kindref="member">DateOrigin</ref><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1aab0883dcec784cfeaf162fcbbd14565d" kindref="member">origin</ref>,</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extraSteps,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;boost::optional&lt;double&gt;&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a680b2046bc47f750d7b16bc7d76daf0a" kindref="member">raw</ref>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1adfaa31d0e0f4c0f73a451d8070f44fc9" kindref="member">TimeSeriesPrep</ref>()<sp/>:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a0c4f6d865c40328b760149488f1b2914" kindref="member">_extrap</ref>(<ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca7efaf7c8d2f4740ec68f67e6de2272a9" kindref="member">ExtrapType::NearestYr</ref>),<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a92fd455e6d380402c4a90e7eaf12c81d" kindref="member">_origin</ref>(<ref refid="namespacemoja_1_1modules_1_1cbm_1a1b96f379826983db8a9aa86f44e592c3a63ca65b13e32c306f13eecdf4e18c4e2" kindref="member">DateOrigin::StartSim</ref>),<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a24e4e36efbd69a9cda3988b4724b5860" kindref="member">_yr0</ref>(0),<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a9e1da54447d06ebb2aa9f784b6c53093" kindref="member">_nYrs</ref>(0),</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a66dbb3df01b072d13e1fde214892eb3b" kindref="member">_dataPerYr</ref>(0),<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1aa293930d20f937696cb6ab49a4931835" kindref="member">_mult</ref>(1.0),<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a69429fdfdd5c252271daac0147e38988" kindref="member">_subSame</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a172dfd8fdb71d5342bea7ab847110cdb" kindref="member">_prepared</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">),<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a3d3486cbad196e1275e52cd7d42a1e9e" kindref="member">_extraStepsIfSprout</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1aff1873f2ddf0293d8d12170ab35e9471" kindref="member">~TimeSeriesPrep</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1afb3977099048ab623c5587397097f979" kindref="member">setTiming</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flint::ITiming*<sp/>timing);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a6da5146666626a01a99a5959ef09494b" kindref="member">series</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1ac25a1dff53df1bd7dc9f0844ee04ec82" kindref="member">value</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a053851026a324264e4363f3c927a392f" kindref="member">yr0</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a7c37cc7fcf24c945bd184a1945cf7a40" kindref="member">nYrs</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a77027adcc18d71e47158eea9e5953fb7" kindref="member">dataPerYr</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a0de6deae23908d6e4a549eae2dff9479" kindref="member">subSame</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;boost::optional&lt;double&gt;&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a680b2046bc47f750d7b16bc7d76daf0a" kindref="member">raw</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1a1b96f379826983db8a9aa86f44e592c3" kindref="member">DateOrigin</ref><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1aab0883dcec784cfeaf162fcbbd14565d" kindref="member">origin</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7c" kindref="member">ExtrapType</ref><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a7ea408d7e347d627522e2b1c817902ae" kindref="member">extrap</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a71a95e0a3725f6f0c96599711cd860b1" kindref="member">preparedTS</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a79522ece34a22b1983ea03995bce5140" kindref="member">calcSizes</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a48b41a0421e357e0639e09bf5b24afb4" kindref="member">fillGapsMult</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a19a125adbdde1a8fb5f65d27e512c7cc" kindref="member">computeOneDataPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,<sp/>std::vector&lt;double&gt;&amp;<sp/>prep);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1afe0c7a30e8133a6524a7a878922b0161" kindref="member">computeAvgYr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1ad6a18c55e63faa4e8eddcecf1ef7b448" kindref="member">computeWholeYrsInterp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,<sp/>std::vector&lt;double&gt;&amp;<sp/>prep);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a44d3cd33ae012e050e6b0cffa479aede" kindref="member">computeWholeYrsBefore</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,<sp/>std::vector&lt;double&gt;&amp;<sp/>prep);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1acd97c9b1bac3f6af070d036b6238132b" kindref="member">computeWholeYrsAfter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,<sp/>std::vector&lt;double&gt;&amp;<sp/>prep);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1af31effc575189c49c2d705ba31d9bbfd" kindref="member">computeOneWholeYr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,<sp/>std::vector&lt;double&gt;&amp;<sp/>prep,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a8f418c4e37bf9724b3f10eb1f284a408" kindref="member">computeOddStepsBefore</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,<sp/>std::vector&lt;double&gt;&amp;<sp/>prep);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a226c7906053da670f232ecd03e90659e" kindref="member">computeOddStepsAfter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,<sp/>std::vector&lt;double&gt;&amp;<sp/>prep);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1aa4c4c0ffe47bc3d6af5dee7d9ee2d690" kindref="member">copyOddStepsBefore</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>src,<sp/>std::vector&lt;double&gt;&amp;<sp/>prep,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcIx);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1adc78925f6a58ff3f083188b28ac25c2e" kindref="member">copyOddStepsAfter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>src,<sp/>std::vector&lt;double&gt;&amp;<sp/>prep,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcIx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1ae46d8e60d7fafe5eef90279c63a38daa" kindref="member">dixFromYr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yr);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a61a5f5c7d33e317659a266cf9d5b80a6" kindref="member">interpOneYr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>d,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prepIxLo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prepIxHi);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a54352a550bb9755ca3579c6b66a36364" kindref="member">interpOneYrWithCheck</ref>(</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,<sp/>std::vector&lt;double&gt;&amp;<sp/>prep,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prepIxLo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prepIxHi);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7c" kindref="member">ExtrapType</ref><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a0c4f6d865c40328b760149488f1b2914" kindref="member">_extrap</ref>;<sp/></highlight><highlight class="comment">//<sp/>NearestYr,<sp/>CycleYrs,<sp/>AvgYr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1a1b96f379826983db8a9aa86f44e592c3" kindref="member">DateOrigin</ref><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a92fd455e6d380402c4a90e7eaf12c81d" kindref="member">_origin</ref>;<sp/></highlight><highlight class="comment">//<sp/>StartSim,<sp/>Calendar,<sp/>Sprout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a24e4e36efbd69a9cda3988b4724b5860" kindref="member">_yr0</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Raw<sp/>data<sp/>is<sp/>dataPerYr<sp/>pieces<sp/>of<sp/>data<sp/>in<sp/>each<sp/>of<sp/>the<sp/>years</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a9e1da54447d06ebb2aa9f784b6c53093" kindref="member">_nYrs</ref>;<sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>yr0<sp/>..<sp/>yr0<sp/>+<sp/>nYrsTS<sp/>-<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a66dbb3df01b072d13e1fde214892eb3b" kindref="member">_dataPerYr</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1aa293930d20f937696cb6ab49a4931835" kindref="member">_mult</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a69429fdfdd5c252271daac0147e38988" kindref="member">_subSame</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flint::ITiming*<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a0c449a36186779d670a5239b0cbabdd3" kindref="member">_timing</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;boost::optional&lt;double&gt;&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1af6e0f7dd215d71cc85e50d9ca45ab088" kindref="member">_raw</ref>;<sp/></highlight><highlight class="comment">//<sp/>User&apos;s<sp/>raw<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a7a89561ade488e642d6923054fa74cbf" kindref="member">_series</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a172dfd8fdb71d5342bea7ab847110cdb" kindref="member">_prepared</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>About<sp/>the<sp/>current<sp/>prepTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a6cdfe2469be6dfa3749bcadac5e02bba" kindref="member">_prepFirstYr</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a8d5f5a2f6618be3189b64e3c58fe4cf1" kindref="member">_prepFirstStep</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a2e1a84f48a7341ad89cf420b5b1c2d2a" kindref="member">_prepLastYr</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a882c6cd64223df7b392997244270997b" kindref="member">_prepStepsPerYr</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Used<sp/>for<sp/>computing<sp/>the<sp/>time<sp/>series<sp/>prepTS<sp/>by<sp/>PrepareTS:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a7b6404ebd003632d33d227610639edb6" kindref="member">_avgData</ref>;<sp/></highlight><highlight class="comment">//<sp/>one<sp/>year<sp/>of<sp/>averaged<sp/>data<sp/>(if<sp/>required)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a3e49059cc53fa5284d66292e406b397c" kindref="member">_avgPrep</ref>;<sp/></highlight><highlight class="comment">//<sp/>one<sp/>year<sp/>of<sp/>prepared<sp/>averaged<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a84de4d42d5f7b81427f76bf08fc0d1a6" kindref="member">_dataStYr</ref>;<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>year<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a337914554d7fe72f638bd8464311dff0" kindref="member">_dataEnYr</ref>;<sp/></highlight><highlight class="comment">//<sp/>End<sp/>year<sp/>of<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prep<sp/>timing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a88cf82782160cd232457f1ea3ca771af" kindref="member">_prepNSteps</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Number<sp/>of<sp/>time<sp/>series<sp/>steps<sp/>required<sp/>by<sp/>simulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a7bd339769ca6ddfe30fef84ce70a970e" kindref="member">_prepStYr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Start<sp/>year<sp/>for<sp/>ts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1ad7d600edd2598816f467a96314079d0a" kindref="member">_prepEnYr</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>End<sp/>year<sp/>for<sp/>ts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Partition<sp/>prep<sp/>into<sp/>whole<sp/>years<sp/>and<sp/>odds<sp/>steps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1ae762a8973597dbea93f46b1c53fb3def" kindref="member">_oddStepsBefore</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Part<sp/>year<sp/>before<sp/>first<sp/>whole<sp/>year<sp/>[0..prepStepsPerYr<sp/>-<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1ad51a3dc5ae4096124332e24288ef287b" kindref="member">_wholeYrsBefore</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Extrapolate<sp/>before<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1aa108fe548e73a82399465518d6c4d555" kindref="member">_wholeYrsInterp</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Interpolate<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1abafa5b33a2921f1c973502db5c8cb526" kindref="member">_wholeYrsAfter</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Extrapolate<sp/>after<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a2e251882c0cfc5113a4c1060188f9139" kindref="member">_oddStepsAfter</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Part<sp/>year<sp/>after<sp/><sp/>last<sp/><sp/>whole<sp/>year<sp/>[0..prepStepsPerYr<sp/>-<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a11605108ba7a069e92bffcaa85a5fff6" kindref="member">_nWholeYrs</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>wholeYrsBefore<sp/>+<sp/>wholeYrsInterp<sp/>+<sp/>wholeYrsAfter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1af1f056a68bd55ed238231fc49278aeae" kindref="member">_firstWholeYr</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a3d3486cbad196e1275e52cd7d42a1e9e" kindref="member">_extraStepsIfSprout</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1ab23fa5e29fa4062e597a71f8750e1672" kindref="member">TimeSeries::TimeSeries</ref>()<sp/>:<sp/>_impl(std::make_shared&lt;<ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep" kindref="compound">TimeSeriesPrep</ref>&gt;())<sp/>{}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1ab23fa5e29fa4062e597a71f8750e1672" kindref="member">TimeSeries::TimeSeries</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a053851026a324264e4363f3c927a392f" kindref="member">yr0</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a77027adcc18d71e47158eea9e5953fb7" kindref="member">dataPerYr</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a7c37cc7fcf24c945bd184a1945cf7a40" kindref="member">nYrs</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a0de6deae23908d6e4a549eae2dff9479" kindref="member">subSame</ref>,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;boost::optional&lt;double&gt;&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a680b2046bc47f750d7b16bc7d76daf0a" kindref="member">raw</ref>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1a1b96f379826983db8a9aa86f44e592c3" kindref="member">DateOrigin</ref><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1aab0883dcec784cfeaf162fcbbd14565d" kindref="member">origin</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extraSteps)<sp/>:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a523160776d09ad72457c7105b6c7483d" kindref="member">_impl</ref>(std::make_shared&lt;TimeSeriesPrep&gt;(<ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a053851026a324264e4363f3c927a392f" kindref="member">yr0</ref>,<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a77027adcc18d71e47158eea9e5953fb7" kindref="member">dataPerYr</ref>,<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a7c37cc7fcf24c945bd184a1945cf7a40" kindref="member">nYrs</ref>,<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a0de6deae23908d6e4a549eae2dff9479" kindref="member">subSame</ref>,<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1aab0883dcec784cfeaf162fcbbd14565d" kindref="member">origin</ref>,<sp/>extraSteps,<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a680b2046bc47f750d7b16bc7d76daf0a" kindref="member">raw</ref>))<sp/>{}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1ae552fd710364a6e5c60fb4532d1a9c33" kindref="member">TimeSeries::series</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a523160776d09ad72457c7105b6c7483d" kindref="member">_impl</ref>-&gt;series();<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a374f9f0250d7e270cc4bf301edb46523" kindref="member">TimeSeries::value</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a523160776d09ad72457c7105b6c7483d" kindref="member">_impl</ref>-&gt;value();<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a053851026a324264e4363f3c927a392f" kindref="member">TimeSeries::yr0</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a523160776d09ad72457c7105b6c7483d" kindref="member">_impl</ref>-&gt;yr0();<sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a7c37cc7fcf24c945bd184a1945cf7a40" kindref="member">TimeSeries::nYrs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a523160776d09ad72457c7105b6c7483d" kindref="member">_impl</ref>-&gt;nYrs();<sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a77027adcc18d71e47158eea9e5953fb7" kindref="member">TimeSeries::dataPerYr</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a523160776d09ad72457c7105b6c7483d" kindref="member">_impl</ref>-&gt;dataPerYr();<sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a0de6deae23908d6e4a549eae2dff9479" kindref="member">TimeSeries::subSame</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a523160776d09ad72457c7105b6c7483d" kindref="member">_impl</ref>-&gt;subSame();<sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;boost::optional&lt;double&gt;&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a680b2046bc47f750d7b16bc7d76daf0a" kindref="member">TimeSeries::raw</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a523160776d09ad72457c7105b6c7483d" kindref="member">_impl</ref>-&gt;raw();<sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="namespacemoja_1_1modules_1_1cbm_1a1b96f379826983db8a9aa86f44e592c3" kindref="member">DateOrigin</ref><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1aab0883dcec784cfeaf162fcbbd14565d" kindref="member">TimeSeries::origin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a523160776d09ad72457c7105b6c7483d" kindref="member">_impl</ref>-&gt;origin();<sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7c" kindref="member">ExtrapType</ref><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a7ea408d7e347d627522e2b1c817902ae" kindref="member">TimeSeries::extrap</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a523160776d09ad72457c7105b6c7483d" kindref="member">_impl</ref>-&gt;extrap();<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1afb3977099048ab623c5587397097f979" kindref="member">TimeSeries::setTiming</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flint::ITiming*<sp/>timing)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a523160776d09ad72457c7105b6c7483d" kindref="member">_impl</ref>-&gt;setTiming(timing);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1adfaa31d0e0f4c0f73a451d8070f44fc9" kindref="member">TimeSeries::TimeSeriesPrep::TimeSeriesPrep</ref>(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a053851026a324264e4363f3c927a392f" kindref="member">yr0</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a77027adcc18d71e47158eea9e5953fb7" kindref="member">dataPerYr</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a7c37cc7fcf24c945bd184a1945cf7a40" kindref="member">nYrs</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a0de6deae23908d6e4a549eae2dff9479" kindref="member">subSame</ref>,<sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1a1b96f379826983db8a9aa86f44e592c3" kindref="member">DateOrigin</ref><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1aab0883dcec784cfeaf162fcbbd14565d" kindref="member">origin</ref>,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extraSteps,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;boost::optional&lt;double&gt;&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a680b2046bc47f750d7b16bc7d76daf0a" kindref="member">raw</ref>)<sp/>:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>_extrap(<ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7c" kindref="member">ExtrapType</ref>::<ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca7efaf7c8d2f4740ec68f67e6de2272a9" kindref="member">NearestYr</ref>),<sp/>_origin(<ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1aab0883dcec784cfeaf162fcbbd14565d" kindref="member">origin</ref>),<sp/>_yr0(<ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a053851026a324264e4363f3c927a392f" kindref="member">yr0</ref>),<sp/>_nYrs(<ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a7c37cc7fcf24c945bd184a1945cf7a40" kindref="member">nYrs</ref>),<sp/>_dataPerYr(<ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a77027adcc18d71e47158eea9e5953fb7" kindref="member">dataPerYr</ref>),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>_mult(1.0),<sp/>_subSame(<ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a0de6deae23908d6e4a549eae2dff9479" kindref="member">subSame</ref>),<sp/>_raw(<ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1a680b2046bc47f750d7b16bc7d76daf0a" kindref="member">raw</ref>),<sp/>_prepared(false),<sp/>_extraStepsIfSprout(extraSteps)<sp/>{}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1afb3977099048ab623c5587397097f979" kindref="member">TimeSeries::TimeSeriesPrep::setTiming</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flint::ITiming*<sp/>timing)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>_timing<sp/>=<sp/>timing;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>_prepNSteps<sp/>=<sp/>_timing-&gt;nSteps();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_origin<sp/>==<sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1a1b96f379826983db8a9aa86f44e592c3a2a225cf5642007d6d947e63a2d905ea1" kindref="member">DateOrigin::Sprout</ref>)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_prepNSteps<sp/>+=<sp/>_extraStepsIfSprout;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>1<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Jim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timingWithInitStep<sp/>=<sp/>_timing-&gt;startDate();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(timing-&gt;stepping())</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>flint::TimeStepping::Monthly:<sp/><sp/><sp/><sp/><sp/><sp/>timingWithInitStep.addMonths(-1);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>flint::TimeStepping::Annual:<sp/><sp/><sp/><sp/><sp/><sp/><sp/>timingWithInitStep.addYears(-1);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>flint::TimeStepping::Daily:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timingWithInitStep.addDays(-1);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>_prepFirstYr<sp/><sp/><sp/><sp/>=<sp/>timingWithInitStep.year();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>_prepFirstStep<sp/><sp/>=<sp/>timingWithInitStep.month();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>_prepLastYr<sp/><sp/><sp/><sp/><sp/>=<sp/>timing-&gt;endDate().year();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>_prepFirstYr<sp/>=<sp/>_timing-&gt;startDate().year();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>_prepFirstStep<sp/>=<sp/>_timing-&gt;startDate().month();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>_prepLastYr<sp/>=<sp/>_timing-&gt;endDate().year();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(timing-&gt;stepping())</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>flint::TimeStepping::Monthly:<sp/>_prepStepsPerYr<sp/>=<sp/>12;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>flint::TimeStepping::Annual:<sp/>_prepStepsPerYr<sp/>=<sp/>1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>flint::TimeStepping::Daily:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>NotImplementedException(</highlight><highlight class="stringliteral">&quot;Daily<sp/>timing<sp/>not<sp/>implemented<sp/>yet&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>sizing<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>calcSizes();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>_prepared<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a6da5146666626a01a99a5959ef09494b" kindref="member">TimeSeries::TimeSeriesPrep::series</ref>()<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_prepared)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedTS();</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_series;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1ac25a1dff53df1bd7dc9f0844ee04ec82" kindref="member">TimeSeries::TimeSeriesPrep::value</ref>()<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_prepared)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preparedTS();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_series[_timing-&gt;step()];</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a053851026a324264e4363f3c927a392f" kindref="member">TimeSeries::TimeSeriesPrep::yr0</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_yr0;<sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a7c37cc7fcf24c945bd184a1945cf7a40" kindref="member">TimeSeries::TimeSeriesPrep::nYrs</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_nYrs;<sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a77027adcc18d71e47158eea9e5953fb7" kindref="member">TimeSeries::TimeSeriesPrep::dataPerYr</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dataPerYr;<sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a0de6deae23908d6e4a549eae2dff9479" kindref="member">TimeSeries::TimeSeriesPrep::subSame</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_subSame;<sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;boost::optional&lt;double&gt;&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a680b2046bc47f750d7b16bc7d76daf0a" kindref="member">TimeSeries::TimeSeriesPrep::raw</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_raw;<sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="namespacemoja_1_1modules_1_1cbm_1a1b96f379826983db8a9aa86f44e592c3" kindref="member">DateOrigin</ref><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1aab0883dcec784cfeaf162fcbbd14565d" kindref="member">TimeSeries::TimeSeriesPrep::origin</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_origin;<sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7c" kindref="member">ExtrapType</ref><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a7ea408d7e347d627522e2b1c817902ae" kindref="member">TimeSeries::TimeSeriesPrep::extrap</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_extrap;<sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a71a95e0a3725f6f0c96599711cd860b1" kindref="member">TimeSeries::TimeSeriesPrep::preparedTS</ref>()<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Computations<sp/>with<sp/>raw<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data<sp/>=<sp/>fillGapsMult();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>_series.resize(_prepNSteps);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data.size()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeOneDataPoint(data,<sp/>_series);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_extrap<sp/>==<sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7cae36636b312545e99e29cccfb673e8140" kindref="member">ExtrapType::AvgYr</ref></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(<sp/><sp/><sp/>_wholeYrsBefore<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_wholeYrsAfter<sp/><sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_oddStepsBefore<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_oddStepsAfter<sp/><sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeAvgYr(data);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>prepared<sp/>data.<sp/>Must<sp/>go<sp/>in<sp/>this<sp/>order!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_wholeYrsInterp<sp/>&gt;<sp/>0)<sp/>computeWholeYrsInterp(data,<sp/>_series);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_wholeYrsBefore<sp/>&gt;<sp/>0)<sp/>computeWholeYrsBefore(data,<sp/>_series);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_wholeYrsAfter<sp/><sp/>&gt;<sp/>0)<sp/><sp/>computeWholeYrsAfter(data,<sp/>_series);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_oddStepsBefore<sp/>&gt;<sp/>0)<sp/>computeOddStepsBefore(data,<sp/>_series);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_oddStepsAfter<sp/><sp/>&gt;<sp/>0)<sp/><sp/>computeOddStepsAfter(data,<sp/>_series);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>_prepared<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TimeSeries::PrepareTSCalcSizes(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstYr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstStep,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastYr)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>set:<sp/>prepNSteps,<sp/>prepFirstYr,<sp/>prepFirstStep,<sp/>prepStepsPerYr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(z.tExtrapTS<sp/>==<sp/>kNearestYr<sp/>||<sp/>z.tExtrapTS<sp/>==<sp/>kCycleYrs<sp/>||<sp/>z.tExtrapTS<sp/>==<sp/>kAvgYr);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prepStStep;<sp/></highlight><highlight class="comment">//<sp/>Unlike<sp/>firstStep,<sp/>is<sp/>0-indexed<sp/>[0..prepStepsPerYr<sp/>-<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataStYr<sp/>=<sp/>z.yr0TS;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataEnYr<sp/>=<sp/>z.yr0TS<sp/>+<sp/>z.nYrsTS<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>synched<sp/>=<sp/>(prepStepsPerYr<sp/>==<sp/>z.dataPerYrTS);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>prepStYr,<sp/>prepEnYr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z.tOriginTS<sp/>==<sp/>kCalendar)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepStYr<sp/>=<sp/>firstYr;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepStStep<sp/>=<sp/>firstStep<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prepStStep<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--prepStYr;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepStStep<sp/>=<sp/>prepStepsPerYr<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepEnYr<sp/>=<sp/>lastYr;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(z.tOriginTS<sp/>==<sp/>kStartSim<sp/>||<sp/>z.tOriginTS<sp/>==<sp/>kSprout);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepStYr<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepStStep<sp/>=<sp/>prepStepsPerYr<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepEnYr<sp/>=<sp/>(prepNSteps<sp/>-<sp/>2)<sp/>/<sp/>prepStepsPerYr;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(prepEnYr<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(prepEnYr<sp/>&gt;=<sp/>prepStYr);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Identify<sp/>whole<sp/>years<sp/>in<sp/>prep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nWholeYrs<sp/>=<sp/>prepEnYr<sp/>-<sp/>prepStYr<sp/>-<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>interior<sp/>years</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prepStStep<sp/>==<sp/>0<sp/>||<sp/>nWholeYrs<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstWholeYr<sp/>=<sp/>prepStYr;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oddStepsBefore<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nWholeYrs;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstWholeYr<sp/>=<sp/>prepStYr<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oddStepsBefore<sp/>=<sp/>prepStepsPerYr<sp/>-<sp/>prepStStep;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oddStepsAfter<sp/>=<sp/>prepNSteps<sp/>-<sp/>oddStepsBefore<sp/>-<sp/>nWholeYrs<sp/>*<sp/>prepStepsPerYr;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(oddStepsAfter<sp/>&gt;=<sp/>prepStepsPerYr)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oddStepsAfter<sp/>-=<sp/>prepStepsPerYr;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nWholeYrs;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(oddStepsBefore<sp/>+<sp/>nWholeYrs<sp/>*<sp/>prepStepsPerYr<sp/>+<sp/>oddStepsAfter<sp/>==<sp/>prepNSteps);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Align<sp/>prep<sp/>whole<sp/>years<sp/>with<sp/>user&apos;s<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wholeYrsBefore<sp/>=<sp/>z.yr0TS<sp/>-<sp/>firstWholeYr;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wholeYrsBefore<sp/>&lt;<sp/>0)<sp/>wholeYrsBefore<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wholeYrsBefore<sp/>&gt;<sp/>nWholeYrs)<sp/>wholeYrsBefore<sp/>=<sp/>nWholeYrs;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wholeYrsAfter<sp/>=<sp/>(firstWholeYr<sp/>+<sp/>nWholeYrs)<sp/>-<sp/>(z.yr0TS<sp/>+<sp/>z.nYrsTS);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wholeYrsAfter<sp/>&lt;<sp/>0)<sp/>wholeYrsAfter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wholeYrsAfter<sp/>&gt;<sp/>nWholeYrs)<sp/>wholeYrsAfter<sp/>=<sp/>nWholeYrs;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wholeYrsInterp<sp/>=<sp/>nWholeYrs<sp/>-<sp/>wholeYrsBefore<sp/>-<sp/>wholeYrsAfter;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(wholeYrsInterp<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ASSERT(wholeYrsInterp<sp/>&lt;=<sp/>z.nYrsTS);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a79522ece34a22b1983ea03995bce5140" kindref="member">TimeSeries::TimeSeriesPrep::calcSizes</ref>()<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>set:<sp/>prepNSteps,<sp/>prepFirstYr,<sp/>prepFirstStep,<sp/>prepStepsPerYr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(<sp/><sp/><sp/>_extrap<sp/>==<sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca7efaf7c8d2f4740ec68f67e6de2272a9" kindref="member">ExtrapType::NearestYr</ref></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_extrap<sp/>==<sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca2d135c3bfea1beb28cefaaa22c9ac119" kindref="member">ExtrapType::CycleYrs</ref></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>_extrap<sp/>==<sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7cae36636b312545e99e29cccfb673e8140" kindref="member">ExtrapType::AvgYr</ref>);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prepStStep;<sp/></highlight><highlight class="comment">//<sp/>Unlike<sp/>firstStep,<sp/>is<sp/>0-indexed<sp/>[0..prepStepsPerYr<sp/>-<sp/>1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>_dataStYr<sp/>=<sp/>_yr0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>_dataEnYr<sp/>=<sp/>_dataStYr<sp/>+<sp/>_nYrs<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>prepStYr,<sp/>prepEnYr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_origin<sp/>==<sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1a1b96f379826983db8a9aa86f44e592c3a8ff922bbcd8ad41cdfc48d3c5163b2ab" kindref="member">DateOrigin::Calendar</ref>)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_prepStYr<sp/>=<sp/>_prepFirstYr;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepStStep<sp/>=<sp/>_prepFirstStep<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_prepEnYr<sp/>=<sp/>_prepLastYr;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poco_assert(_origin<sp/>==<sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1a1b96f379826983db8a9aa86f44e592c3a63ca65b13e32c306f13eecdf4e18c4e2" kindref="member">DateOrigin::StartSim</ref><sp/>||<sp/>_origin<sp/>==<sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1a1b96f379826983db8a9aa86f44e592c3a2a225cf5642007d6d947e63a2d905ea1" kindref="member">DateOrigin::Sprout</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_prepStYr<sp/>=<sp/>-1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepStStep<sp/>=<sp/>_prepStepsPerYr<sp/>-<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_prepEnYr<sp/>=<sp/>(_prepNSteps<sp/>-<sp/>1)<sp/>/<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poco_assert(_prepEnYr<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(_prepEnYr<sp/>&gt;=<sp/>_prepStYr);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Identify<sp/>whole<sp/>years<sp/>in<sp/>prep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>_nWholeYrs<sp/>=<sp/>_prepEnYr<sp/>-<sp/>_prepStYr<sp/>-<sp/>1;<sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>interior<sp/>years</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prepStStep<sp/>==<sp/>0<sp/>||<sp/>_nWholeYrs<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_firstWholeYr<sp/>=<sp/>_prepStYr;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_oddStepsBefore<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++_nWholeYrs;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_firstWholeYr<sp/>=<sp/>_prepStYr<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_oddStepsBefore<sp/>=<sp/>_prepStepsPerYr<sp/>-<sp/>prepStStep;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>_oddStepsAfter<sp/>=<sp/>_prepNSteps<sp/>-<sp/>_oddStepsBefore<sp/>-<sp/>_nWholeYrs<sp/>*<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_oddStepsAfter<sp/>&gt;=<sp/>_prepStepsPerYr)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_oddStepsAfter<sp/>-=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++_nWholeYrs;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(_oddStepsBefore<sp/>+<sp/>_nWholeYrs<sp/>*<sp/>_prepStepsPerYr<sp/>+<sp/>_oddStepsAfter<sp/>==<sp/>_prepNSteps);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Align<sp/>prep<sp/>whole<sp/>years<sp/>with<sp/>user&apos;s<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>_wholeYrsBefore<sp/>=<sp/>_dataStYr<sp/>-<sp/>_firstWholeYr;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_wholeYrsBefore<sp/>&lt;<sp/>0)<sp/>_wholeYrsBefore<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_wholeYrsBefore<sp/>&gt;<sp/>_nWholeYrs)<sp/>_wholeYrsBefore<sp/>=<sp/>_nWholeYrs;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>_wholeYrsAfter<sp/>=<sp/>(_firstWholeYr<sp/>+<sp/>_nWholeYrs)<sp/>-<sp/>(_dataStYr<sp/>+<sp/>_nYrs);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_wholeYrsAfter<sp/>&lt;<sp/>0)<sp/>_wholeYrsAfter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_wholeYrsAfter<sp/>&gt;<sp/>_nWholeYrs)<sp/>_wholeYrsAfter<sp/>=<sp/>_nWholeYrs;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>_wholeYrsInterp<sp/>=<sp/>_nWholeYrs<sp/>-<sp/>_wholeYrsBefore<sp/>-<sp/>_wholeYrsAfter;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(_wholeYrsInterp<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(_wholeYrsInterp<sp/>&lt;=<sp/>_nYrs);</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">std::vector&lt;double&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a48b41a0421e357e0639e09bf5b24afb4" kindref="member">TimeSeries::TimeSeriesPrep::fillGapsMult</ref>()<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Later<sp/>interpolations<sp/>and<sp/>extrapolations<sp/>require<sp/>the<sp/>TS<sp/>table<sp/>to<sp/>be<sp/>complete.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Empty<sp/>cells<sp/>are<sp/>assigned<sp/>the<sp/>average<sp/>of<sp/>the<sp/>column.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>result(_raw.size());</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>_dataPerYr;<sp/>++c)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>col<sp/>sum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>colAvg<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ix<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>_nYrs;<sp/>++r)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_raw[ix].is_initialized())<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colAvg<sp/>+=<sp/>_raw[ix].get();</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ix<sp/>+=<sp/>_dataPerYr;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;No<sp/>data<sp/>for<sp/>timeseries<sp/>column&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colAvg<sp/>/=<sp/>n;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ix<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;<sp/>r<sp/>&lt;<sp/>_nYrs;<sp/>++r)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[ix]<sp/>=<sp/>(_raw[ix].is_initialized()<sp/>?<sp/>_raw[ix].get()<sp/>:<sp/>colAvg)<sp/>*<sp/>_mult;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ix<sp/>+=<sp/>_dataPerYr;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a19a125adbdde1a8fb5f65d27e512c7cc" kindref="member">TimeSeries::TimeSeriesPrep::computeOneDataPoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>prep)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(data.size()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>data.front();</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_subSame)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>/=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_prepStepsPerYr);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>std::fill(std::begin(prep),<sp/>std::end(prep),<sp/>val);</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1afe0c7a30e8133a6524a7a878922b0161" kindref="member">TimeSeries::TimeSeriesPrep::computeAvgYr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(_nYrs<sp/>&gt;=<sp/>1);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>raw<sp/>avg<sp/>-&gt;<sp/>avgData</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>_avgData.resize(_dataPerYr);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_nYrs<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::copy(std::begin(data),<sp/>std::end(data),<sp/>std::begin(_avgData));</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nYrsInv<sp/>=<sp/>1.0<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_nYrs);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>_dataPerYr<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>_nYrs<sp/>-<sp/>1;<sp/>j<sp/>&gt;=<sp/>0;<sp/>--j,<sp/>k<sp/>+=<sp/>_dataPerYr)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>data[k];</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_avgData[i]<sp/>=<sp/>sum<sp/>*<sp/>nYrsInv;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>prepared<sp/>avg<sp/>-&gt;<sp/>avgPrep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>_avgPrep.resize(_prepStepsPerYr);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>interpOneYr(&amp;_avgData[0],<sp/>&amp;_avgPrep[0],<sp/>0,<sp/>_prepStepsPerYr<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Interpolate<sp/>whole<sp/>years<sp/>from<sp/>user&apos;s<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1ad6a18c55e63faa4e8eddcecf1ef7b448" kindref="member">TimeSeries::TimeSeriesPrep::computeWholeYrsInterp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>prep)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(_wholeYrsInterp<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix<sp/>=<sp/>(_firstWholeYr<sp/>+<sp/>_wholeYrsBefore<sp/>-<sp/>_yr0)<sp/>*<sp/>_dataPerYr;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix<sp/>=<sp/>_oddStepsBefore<sp/>+<sp/>_wholeYrsBefore<sp/>*<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>_wholeYrsInterp<sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpOneYrWithCheck(data,<sp/>prep,<sp/>dix,<sp/>pix,<sp/>0,<sp/>_prepStepsPerYr<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dix<sp/>+=<sp/>_dataPerYr;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>+=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extrapolate<sp/>whole<sp/>years<sp/>before<sp/>user&apos;s<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a44d3cd33ae012e050e6b0cffa479aede" kindref="member">TimeSeries::TimeSeriesPrep::computeWholeYrsBefore</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>prep)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(_wholeYrsBefore<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PrepareTSComputeWholeYrsInterp<sp/>must<sp/>already<sp/>have<sp/>run!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbOneYr<sp/>=<sp/>_prepStepsPerYr<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>last<sp/>whole-year-before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastYrBefore<sp/>=<sp/>_firstWholeYr<sp/>+<sp/>_wholeYrsBefore<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix<sp/>=<sp/>_oddStepsBefore<sp/>+<sp/>(_wholeYrsBefore<sp/>-<sp/>1)<sp/>*<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculated<sp/>years</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCalcYrs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixCopyIncr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_extrap)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca7efaf7c8d2f4740ec68f67e6de2272a9" kindref="member">ExtrapType::NearestYr</ref>:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_wholeYrsInterp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix<sp/>=<sp/>dixFromYr(data,<sp/>lastYrBefore);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeOneWholeYr(data,<sp/>prep,<sp/>dix,<sp/>pix);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>-=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCalcYrs<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCalcYrs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixCopyIncr<sp/>=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca2d135c3bfea1beb28cefaaa22c9ac119" kindref="member">ExtrapType::CycleYrs</ref>:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCalcYrs<sp/>=<sp/>_nYrs<sp/>-<sp/>_wholeYrsInterp;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nCalcYrs<sp/>&gt;<sp/>_wholeYrsBefore)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCalcYrs<sp/>=<sp/>_wholeYrsBefore;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nCalcYrs<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCalcYrs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix<sp/>=<sp/>dixFromYr(data,<sp/>lastYrBefore);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>nCalcYrs;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeOneWholeYr(data,<sp/>prep,<sp/>dix,<sp/>pix);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dix<sp/>-=<sp/>_dataPerYr;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dix<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dix<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data.size())<sp/>-<sp/>_dataPerYr;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>-=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixCopyIncr<sp/>=<sp/>_prepStepsPerYr<sp/>*<sp/>_nYrs;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7cae36636b312545e99e29cccfb673e8140" kindref="member">ExtrapType::AvgYr</ref>:</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::memcpy(&amp;prep[pix],<sp/>&amp;_avgPrep[0],<sp/>nbOneYr);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>-=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCalcYrs<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixCopyIncr<sp/>=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;_extrap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copied<sp/>years</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>_wholeYrsBefore<sp/>-<sp/>nCalcYrs;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;prep[pix],<sp/>&amp;prep[pix<sp/>+<sp/>pixCopyIncr],<sp/>nbOneYr);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>-=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extrapolate<sp/>whole<sp/>years<sp/>after<sp/>user&apos;s<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1acd97c9b1bac3f6af070d036b6238132b" kindref="member">TimeSeries::TimeSeriesPrep::computeWholeYrsAfter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>prep)<sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(_wholeYrsAfter<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PrepareTSComputeWholeYrsInterp<sp/>must<sp/>already<sp/>have<sp/>run!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbOneYr<sp/>=<sp/>_prepStepsPerYr<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(double);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>to<sp/>first<sp/>whole-year-after</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstYrAfter<sp/>=<sp/>_firstWholeYr<sp/>+<sp/>_wholeYrsBefore<sp/>+<sp/>_wholeYrsInterp;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix<sp/>=<sp/>_oddStepsBefore<sp/>+<sp/>(_wholeYrsBefore<sp/>+<sp/>_wholeYrsInterp)<sp/>*<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculated<sp/>years</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCalcYrs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pixCopyDecr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_extrap)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca7efaf7c8d2f4740ec68f67e6de2272a9" kindref="member">ExtrapType::NearestYr</ref>:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_wholeYrsInterp<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix<sp/>=<sp/>dixFromYr(data,<sp/>firstYrAfter);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeOneWholeYr(data,<sp/>prep,<sp/>dix,<sp/>pix);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>+=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCalcYrs<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCalcYrs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixCopyDecr<sp/>=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca2d135c3bfea1beb28cefaaa22c9ac119" kindref="member">ExtrapType::CycleYrs</ref>:</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCalcYrs<sp/>=<sp/>_nYrs<sp/>-<sp/>_wholeYrsInterp;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nCalcYrs<sp/>&gt;<sp/>_wholeYrsAfter)</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCalcYrs<sp/>=<sp/>_wholeYrsAfter;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nCalcYrs<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCalcYrs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix<sp/>=<sp/>dixFromYr(data,<sp/>firstYrAfter);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>nCalcYrs;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeOneWholeYr(data,<sp/>prep,<sp/>dix,<sp/>pix);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dix<sp/>+=<sp/>_dataPerYr;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dix<sp/>&gt;=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data.size()))</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dix<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>+=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixCopyDecr<sp/>=<sp/>_prepStepsPerYr<sp/>*<sp/>_nYrs;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7cae36636b312545e99e29cccfb673e8140" kindref="member">ExtrapType::AvgYr</ref>:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;prep.data()[pix],<sp/>&amp;_avgPrep.data()[0],<sp/>nbOneYr);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>+=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nCalcYrs<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pixCopyDecr<sp/>=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;_extrap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copied<sp/>years</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>_wholeYrsAfter<sp/>-<sp/>nCalcYrs;<sp/>i<sp/>&gt;<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;prep.data()[pix],<sp/>&amp;prep.data()[pix<sp/>-<sp/>pixCopyDecr],<sp/>nbOneYr);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pix<sp/>+=<sp/>_prepStepsPerYr;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1af31effc575189c49c2d705ba31d9bbfd" kindref="member">TimeSeries::TimeSeriesPrep::computeOneWholeYr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>prep,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>interpOneYrWithCheck(data,<sp/>prep,<sp/>dix,<sp/>pix,<sp/>0,<sp/>_prepStepsPerYr<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Partial<sp/>year<sp/>at<sp/>start<sp/>of<sp/>prep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a8f418c4e37bf9724b3f10eb1f284a408" kindref="member">TimeSeries::TimeSeriesPrep::computeOddStepsBefore</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>prep)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(_oddStepsBefore<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_oddStepsBefore<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prepareTSComputeWholeYrsInterp,<sp/>prepareTSComputeWholeYrsBefore,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>prepareTSComputeWholeYrsAfter<sp/>must<sp/>already<sp/>have<sp/>run<sp/>(ie<sp/>all<sp/>whole<sp/>years<sp/>done)!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Interpolated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_yr0<sp/>&lt;=<sp/>_prepStYr<sp/>&amp;&amp;<sp/>_prepStYr<sp/>&lt;=<sp/>_dataEnYr)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix<sp/>=<sp/>dixFromYr(data,<sp/>_prepStYr);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpOneYrWithCheck(data,<sp/>prep,<sp/>dix,<sp/>0,<sp/>_prepStepsPerYr<sp/>-<sp/>_oddStepsBefore,<sp/>_prepStepsPerYr<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Extrapolated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_extrap)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca7efaf7c8d2f4740ec68f67e6de2272a9" kindref="member">ExtrapType::NearestYr</ref>:</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_nWholeYrs<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyOddStepsBefore(prep,<sp/>prep,<sp/>_prepStepsPerYr);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix<sp/>=<sp/>dixFromYr(data,<sp/>_prepStYr);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpOneYrWithCheck(data,<sp/>prep,<sp/>dix,<sp/>0,<sp/>_prepStepsPerYr<sp/>-<sp/>_oddStepsBefore,<sp/>_prepStepsPerYr<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca2d135c3bfea1beb28cefaaa22c9ac119" kindref="member">ExtrapType::CycleYrs</ref>:</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_nYrs<sp/>&lt;=<sp/>_nWholeYrs)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyOddStepsBefore(prep,<sp/>prep,<sp/>_nYrs<sp/>*<sp/>_prepStepsPerYr);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix<sp/>=<sp/>dixFromYr(data,<sp/>_prepStYr);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpOneYrWithCheck(data,<sp/>prep,<sp/>dix,<sp/>0,<sp/>_prepStepsPerYr<sp/>-<sp/>_oddStepsBefore,<sp/>_prepStepsPerYr<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7cae36636b312545e99e29cccfb673e8140" kindref="member">ExtrapType::AvgYr</ref>:</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyOddStepsBefore(_avgPrep,<sp/>prep,<sp/>_prepStepsPerYr<sp/>-<sp/>_oddStepsBefore);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1aa4c4c0ffe47bc3d6af5dee7d9ee2d690" kindref="member">TimeSeries::TimeSeriesPrep::copyOddStepsBefore</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>src,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>prep,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcIx)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;prep.data()[0],<sp/>&amp;src.data()[srcIx],<sp/>_oddStepsBefore<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1adc78925f6a58ff3f083188b28ac25c2e" kindref="member">TimeSeries::TimeSeriesPrep::copyOddStepsAfter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>src,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>prep,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>srcIx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>std::memcpy(&amp;prep.data()[pix],<sp/>&amp;src.data()[srcIx],<sp/>_oddStepsAfter<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Partial<sp/>year<sp/>at<sp/>end<sp/>of<sp/>prep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a226c7906053da670f232ecd03e90659e" kindref="member">TimeSeries::TimeSeriesPrep::computeOddStepsAfter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>prep)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(_oddStepsAfter<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_oddStepsAfter<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PrepareTSComputeWholeYrsInterp,<sp/>PrepareTSComputeWholeYrsBefore,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PrepareTSComputeWholeYrsAfter<sp/>must<sp/>already<sp/>have<sp/>run<sp/>(ie<sp/>all<sp/>whole<sp/>years<sp/>done)!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix<sp/>=<sp/>_prepNSteps<sp/>-<sp/>_oddStepsAfter;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Interpolated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_yr0<sp/>&lt;=<sp/>_prepEnYr<sp/>&amp;&amp;<sp/>_prepEnYr<sp/>&lt;=<sp/>_dataEnYr)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix<sp/>=<sp/>dixFromYr(data,<sp/>_prepEnYr);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpOneYrWithCheck(data,<sp/>prep,<sp/>dix,<sp/>pix,<sp/>0,<sp/>_oddStepsAfter<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Extrapolated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_extrap)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca7efaf7c8d2f4740ec68f67e6de2272a9" kindref="member">ExtrapType::NearestYr</ref>:</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_nWholeYrs<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyOddStepsAfter(prep,<sp/>prep,<sp/>pix<sp/>-<sp/>_prepStepsPerYr,<sp/>pix);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix<sp/>=<sp/>dixFromYr(data,<sp/>_prepEnYr);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpOneYrWithCheck(data,<sp/>prep,<sp/>dix,<sp/>pix,<sp/>0,<sp/>_oddStepsAfter<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca2d135c3bfea1beb28cefaaa22c9ac119" kindref="member">ExtrapType::CycleYrs</ref>:</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_nYrs<sp/>&lt;=<sp/>_nWholeYrs)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyOddStepsAfter(prep,<sp/>prep,<sp/>pix<sp/>-<sp/>_nYrs<sp/>*<sp/>_prepStepsPerYr,<sp/>pix);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix<sp/>=<sp/>dixFromYr(data,<sp/>_prepEnYr);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interpOneYrWithCheck(data,<sp/>prep,<sp/>dix,<sp/>pix,<sp/>0,<sp/>_oddStepsAfter<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7cae36636b312545e99e29cccfb673e8140" kindref="member">ExtrapType::AvgYr</ref>:</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyOddStepsAfter(_avgPrep,<sp/>prep,<sp/>0,<sp/>pix);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a61a5f5c7d33e317659a266cf9d5b80a6" kindref="member">TimeSeries::TimeSeriesPrep::interpOneYr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>d,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prepIxLo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prepIxHi)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>For<sp/>a<sp/>full<sp/>year&apos;s<sp/>calculation<sp/>(prepIxLo<sp/>=<sp/>0,<sp/>prepIxHi<sp/>=<sp/>prepStepsPerYr<sp/>-<sp/>1):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>In:<sp/><sp/>d[0,<sp/>..<sp/>,<sp/>dataPerYr<sp/><sp/>-<sp/>1]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;--<sp/>user&apos;s<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Out:<sp/>p[0,<sp/>..<sp/>,<sp/>prepStepsPerYr<sp/>-<sp/>1]<sp/><sp/><sp/>&lt;--<sp/>prepared<sp/>time<sp/>series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Thus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>dataPerYr<sp/><sp/>input<sp/><sp/>blocks<sp/>(block<sp/>=<sp/>step,<sp/>effectively<sp/>a<sp/>&quot;point&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>prepStepsPerYr<sp/>output<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>On<sp/>year<sp/>calculated<sp/>on<sp/>its<sp/>own,<sp/>with<sp/>no<sp/>influence<sp/>from<sp/>other<sp/>years.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>However<sp/>in<sp/>general<sp/>we<sp/>only<sp/>want<sp/>output<sp/>blocks<sp/>prepIxLo<sp/>..<sp/>prepIxHi,<sp/>which<sp/>are<sp/>put<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>p[0,<sp/>..<sp/>,<sp/>prepIxHi<sp/>-<sp/>prepIxLo]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Relatively<sp/>slow,<sp/>so<sp/>minimize<sp/>calls<sp/>to<sp/>this<sp/>routine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>For<sp/>each<sp/>output<sp/>block:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>*<sp/>The<sp/>part<sp/>of<sp/>[0,<sp/>dataPerYr]<sp/>that<sp/>is<sp/>covered<sp/>by<sp/>the<sp/>output<sp/>block<sp/>is<sp/>[st,<sp/>en]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>*<sp/>The<sp/>input<sp/>block<sp/>at<sp/>st<sp/>is<sp/>stIx,<sp/>at<sp/>en<sp/>is<sp/>enIx.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>*<sp/>Output<sp/>block<sp/>value<sp/>=<sp/>(Sum<sp/>over<sp/>each<sp/>input<sp/>block<sp/>that<sp/>falls<sp/>during<sp/>the<sp/>output<sp/>block)<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Height<sp/>of<sp/>input<sp/>block<sp/>*<sp/>Fraction<sp/>of<sp/>input<sp/>block<sp/>that<sp/>is<sp/>during<sp/>the<sp/>output<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>st<sp/>and<sp/>en<sp/>are<sp/>calculated<sp/>by<sp/>multiplication<sp/>each<sp/>output<sp/>step,<sp/>so<sp/>htere<sp/>is<sp/>no<sp/>accumulation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>of<sp/>roundoff<sp/>error<sp/>as<sp/>might<sp/>occur<sp/>if<sp/>en<sp/>was<sp/>calculated<sp/>by<sp/>adding<sp/>to<sp/>the<sp/>previous<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>kEpsilon<sp/>counters<sp/>roundoff<sp/>error<sp/>in<sp/>conversion<sp/>from<sp/>flo<sp/>to<sp/>int<sp/>by<sp/>boosting<sp/>st<sp/>and<sp/>en.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>st<sp/>and<sp/>en<sp/>are<sp/>in<sp/>[0..10,000],<sp/>less<sp/>than<sp/>10^4.<sp/>Double<sp/>prescion,<sp/>so<sp/>has<sp/>15<sp/>significant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>figures.<sp/>So<sp/>set<sp/>kEpsilon<sp/>safely<sp/>more<sp/>than<sp/>10-^(15<sp/>-<sp/>4).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(prepIxHi<sp/>&gt;=<sp/>prepIxLo);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>poco_assert(prepIxHi<sp/>&lt;=<sp/>prepIxLo<sp/>+<sp/>_prepStepsPerYr<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kEpsilon<sp/>=<sp/>0.0000000001;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kEpsilonPlus<sp/>=<sp/>0.0000000002;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>50%<sp/>to<sp/>100%<sp/>more<sp/>than<sp/>kEpsilon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nInBlocksPerOutBlock<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_dataPerYr)<sp/>/<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_prepStepsPerYr);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nOutBlocksPerInBlock<sp/>=<sp/>1.0<sp/>/<sp/>nInBlocksPerOutBlock;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>prepIxHi<sp/>-<sp/>prepIxLo;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st0<sp/>=<sp/>prepIxLo<sp/>*<sp/>nInBlocksPerOutBlock<sp/>+<sp/>kEpsilon;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st<sp/>=<sp/>st0<sp/>+<sp/>(n<sp/>+<sp/>1)<sp/>*<sp/>nInBlocksPerOutBlock;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>en;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>n;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>en<sp/>=<sp/>st;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st<sp/>=<sp/>st0<sp/>+<sp/>i<sp/>*<sp/>nInBlocksPerOutBlock;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stIx<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(st);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enIx<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(en);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enIx<sp/>&gt;=<sp/>_dataPerYr)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enIx<sp/>=<sp/>_dataPerYr<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poco_assert(0<sp/>&lt;=<sp/>stIx<sp/>&amp;&amp;<sp/>stIx<sp/>&lt;<sp/>_dataPerYr);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>poco_assert(0<sp/>&lt;=<sp/>enIx<sp/>&amp;&amp;<sp/>enIx<sp/>&lt;<sp/>_dataPerYr);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sum;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stIx<sp/>==<sp/>enIx)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>interior<sp/>input<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>d[stIx]<sp/>*<sp/>nInBlocksPerOutBlock;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>interior<sp/>input<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stDiff<sp/>=<sp/>st<sp/>-<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(stIx)<sp/>-<sp/>kEpsilonPlus;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stDiff<sp/>&gt;<sp/>0.0)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Partial<sp/>input<sp/>block<sp/>to<sp/>left<sp/>of<sp/>interior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>d[stIx]<sp/>*<sp/>(1.0<sp/>-<sp/>stDiff);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++stIx;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>stIx;<sp/>j<sp/>&lt;<sp/>enIx;<sp/>++j)<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Whole<sp/>input<sp/>blocks<sp/>in<sp/>interior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>d[j];</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>enDiff<sp/>=<sp/>en<sp/>-<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(enIx)<sp/>-<sp/>kEpsilonPlus;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(enDiff<sp/>&gt;<sp/>0.0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Partial<sp/>input<sp/>block<sp/>to<sp/>right<sp/>of<sp/>interior</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>d[enIx]<sp/>*<sp/>enDiff;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_subSame)<sp/>sum<sp/>*=<sp/>nOutBlocksPerInBlock;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p[i]<sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1a54352a550bb9755ca3579c6b66a36364" kindref="member">TimeSeries::TimeSeriesPrep::interpOneYrWithCheck</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/>prep,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dix,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pix,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prepIxLo,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>prepIxHi)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>interpOneYr(&amp;data.data()[dix],<sp/>&amp;prep.data()[pix],<sp/>prepIxLo,<sp/>prepIxHi);</highlight></codeline>
<codeline lineno="697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeSeries_1_1TimeSeriesPrep_1ae46d8e60d7fafe5eef90279c63a38daa" kindref="member">TimeSeries::TimeSeriesPrep::dixFromYr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yr)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Returns<sp/>dix<sp/>(data<sp/>index)<sp/>for<sp/>the<sp/>data<sp/>for<sp/>the<sp/>simulation<sp/>year<sp/>yr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>Does<sp/>not<sp/>apply<sp/>if<sp/>tExtrapTS<sp/>=<sp/>AvgYr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>yr<sp/>is<sp/>before<sp/>user<sp/>data<sp/>begins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yr<sp/>&lt;=<sp/>_yr0)<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_extrap)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca7efaf7c8d2f4740ec68f67e6de2272a9" kindref="member">ExtrapType::NearestYr</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca2d135c3bfea1beb28cefaaa22c9ac119" kindref="member">ExtrapType::CycleYrs</ref>:<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>corresYr<sp/>=<sp/>(yr<sp/>-<sp/>_yr0)<sp/>%<sp/>_nYrs;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(corresYr<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>corresYr<sp/>+=<sp/>_nYrs;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dataPerYr<sp/>*<sp/>corresYr;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7cae36636b312545e99e29cccfb673e8140" kindref="member">ExtrapType::AvgYr</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>yr<sp/>is<sp/>after<sp/>user<sp/>data<sp/>ends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yr<sp/>&gt;=<sp/>_dataEnYr)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(_extrap)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca7efaf7c8d2f4740ec68f67e6de2272a9" kindref="member">ExtrapType::NearestYr</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(data.size())<sp/>-<sp/>_dataPerYr;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7ca2d135c3bfea1beb28cefaaa22c9ac119" kindref="member">ExtrapType::CycleYrs</ref>:<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dataPerYr<sp/>*<sp/>((yr<sp/>-<sp/>_yr0)<sp/>%<sp/>_nYrs);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespacemoja_1_1modules_1_1cbm_1ae15745054bf02c91a60341597bdfcc7cae36636b312545e99e29cccfb673e8140" kindref="member">ExtrapType::AvgYr</ref>:<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>yr<sp/>is<sp/>during<sp/>user<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_dataPerYr<sp/>*<sp/>(yr<sp/>-<sp/>_yr0);</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cbm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>modules</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>moja</highlight></codeline>
    </programlisting>
    <location file="/mnt/e/moja.canada/Source/moja.modules.cbm/src/timeseries.cpp"/>
  </compounddef>
</doxygen>
