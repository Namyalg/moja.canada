<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="cbmpartitioningmodule_8cpp" kind="file" language="C++">
    <compoundname>cbmpartitioningmodule.cpp</compoundname>
    <includes refid="cbmpartitioningmodule_8h" local="yes">moja/modules/cbm/cbmpartitioningmodule.h</includes>
    <includes local="no">moja/flint/variable.h</includes>
    <includes local="no">moja/flint/timing.h</includes>
    <includes local="no">moja/flint/ipool.h</includes>
    <includes local="no">moja/signals.h</includes>
    <includes local="no">moja/notificationcenter.h</includes>
    <incdepgraph>
      <node id="3">
        <label>list</label>
      </node>
      <node id="4">
        <label>moja/modules/cbm/_modules.cbm_exports.h</label>
      </node>
      <node id="13">
        <label>moja/signals.h</label>
      </node>
      <node id="6">
        <label>moja/flint/modulebase.h</label>
      </node>
      <node id="11">
        <label>moja/flint/timing.h</label>
      </node>
      <node id="1">
        <label>/mnt/e/moja.canada/Source/moja.modules.cbm/src/cbmpartitioningmodule.cpp</label>
        <link refid="cbmpartitioningmodule_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>moja/flint/flintexceptions.h</label>
      </node>
      <node id="5">
        <label>moja/modules/cbm/cbmmodulebase.h</label>
        <link refid="cbmmodulebase_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>moja/flint/variable.h</label>
      </node>
      <node id="9">
        <label>boost/exception_ptr.hpp</label>
      </node>
      <node id="12">
        <label>moja/flint/ipool.h</label>
      </node>
      <node id="2">
        <label>moja/modules/cbm/cbmpartitioningmodule.h</label>
        <link refid="cbmpartitioningmodule_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>moja/notificationcenter.h</label>
      </node>
      <node id="8">
        <label>moja/exception.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classmoja_1_1modules_1_1cbm_1_1IRecoveryRule" prot="public">moja::modules::cbm::IRecoveryRule</innerclass>
    <innerclass refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule" prot="public">moja::modules::cbm::TimeRecoveryRule</innerclass>
    <innerclass refid="classmoja_1_1modules_1_1cbm_1_1CarbonRecoveryRule" prot="public">moja::modules::cbm::CarbonRecoveryRule</innerclass>
    <innernamespace refid="namespacemoja">moja</innernamespace>
    <innernamespace refid="namespacemoja_1_1modules">moja::modules</innernamespace>
    <innernamespace refid="namespacemoja_1_1modules_1_1cbm">moja::modules::cbm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cbmpartitioningmodule_8h" kindref="compound">moja/modules/cbm/cbmpartitioningmodule.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moja/flint/variable.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moja/flint/timing.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moja/flint/ipool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moja/signals.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;moja/notificationcenter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemoja" kindref="compound">moja</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">modules<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacemoja_1_1modules_1_1cbm" kindref="compound">cbm</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classmoja_1_1modules_1_1cbm_1_1IRecoveryRule" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmoja_1_1modules_1_1cbm_1_1IRecoveryRule" kindref="compound">IRecoveryRule</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1IRecoveryRule_1a81d41f11dd2ae61da4b3abd44e097726" kindref="member">~IRecoveryRule</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1IRecoveryRule_1a2583f101bfac83613bc4016c6a98b9ae" kindref="member">isSatisfied</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule" kindref="compound">TimeRecoveryRule</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1IRecoveryRule" kindref="compound">IRecoveryRule</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule_1aad7b42b40b00a46be1ed6edb53222b63" kindref="member">TimeRecoveryRule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flint::ILandUnitDataWrapper*<sp/>landUnitData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>years,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>spinup)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule_1a04ab8ceb8f4e27134a67b00651407426" kindref="member">_age</ref><sp/>=<sp/>landUnitData-&gt;getVariable(</highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule_1a0c449a36186779d670a5239b0cbabdd3" kindref="member">_timing</ref><sp/>=<sp/>landUnitData-&gt;timing();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yearsElapsedInSpinup<sp/>=<sp/>spinup<sp/>?<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule_1a04ab8ceb8f4e27134a67b00651407426" kindref="member">_age</ref>-&gt;value().extract&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentYear<sp/>=<sp/>landUnitData-&gt;timing()-&gt;curStartDate().year();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule_1a77ddccc40fde59723a64302d521ea6de" kindref="member">_targetYear</ref><sp/>=<sp/>currentYear<sp/>+<sp/>(years<sp/>-<sp/>yearsElapsedInSpinup);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule_1afab36c4b3bc9fabf1ba4a359bc871096" kindref="member">isSatisfied</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule_1a0c449a36186779d670a5239b0cbabdd3" kindref="member">_timing</ref>-&gt;curStartDate().year()<sp/>&gt;=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule_1a77ddccc40fde59723a64302d521ea6de" kindref="member">_targetYear</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule_1a77ddccc40fde59723a64302d521ea6de" kindref="member">_targetYear</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flint::IVariable*<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule_1a04ab8ceb8f4e27134a67b00651407426" kindref="member">_age</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flint::ITiming*<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1TimeRecoveryRule_1a0c449a36186779d670a5239b0cbabdd3" kindref="member">_timing</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classmoja_1_1modules_1_1cbm_1_1CarbonRecoveryRule" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classmoja_1_1modules_1_1cbm_1_1CarbonRecoveryRule" kindref="compound">CarbonRecoveryRule</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1IRecoveryRule" kindref="compound">IRecoveryRule</ref><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CarbonRecoveryRule_1a034cf6dd0b8a505bd117075bbc4cf0c3" kindref="member">CarbonRecoveryRule</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;const<sp/>flint::IPool*&gt;<sp/>pools,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target)<sp/>:<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CarbonRecoveryRule_1aa80c244616bc1e787e1af7bd1554ba44" kindref="member">_pools</ref>(pools),<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CarbonRecoveryRule_1a9d9458d8aa1984e975e6e0516f62acf3" kindref="member">_target</ref>(target)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CarbonRecoveryRule_1afab36c4b3bc9fabf1ba4a359bc871096" kindref="member">isSatisfied</ref>()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>currentValue<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pool<sp/>:<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CarbonRecoveryRule_1aa80c244616bc1e787e1af7bd1554ba44" kindref="member">_pools</ref>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentValue<sp/>+=<sp/>pool-&gt;value();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>currentValue<sp/>&gt;=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CarbonRecoveryRule_1a9d9458d8aa1984e975e6e0516f62acf3" kindref="member">_target</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CarbonRecoveryRule_1a9d9458d8aa1984e975e6e0516f62acf3" kindref="member">_target</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;const<sp/>flint::IPool*&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CarbonRecoveryRule_1aa80c244616bc1e787e1af7bd1554ba44" kindref="member">_pools</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ac0a652d7fd514484aa74d3414acb704d" kindref="member">CBMPartitioningModule::subscribe</ref>(NotificationCenter&amp;<sp/>notificationCenter)<sp/>{<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notificationCenter.subscribe(signals::LocalDomainInit,<sp/><sp/>&amp;<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMModuleBase_1a1b18c4fe77c47f3ae87f5f5a5526793f" kindref="member">CBMPartitioningModule::onLocalDomainInit</ref>,<sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notificationCenter.subscribe(signals::TimingInit,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMModuleBase_1a4d4769cafb921f17df2cf6a39de2c7d2" kindref="member">CBMPartitioningModule::onTimingInit</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notificationCenter.subscribe(signals::DisturbanceEvent,<sp/>&amp;<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMModuleBase_1a155d87923469931220e7ddc640df9cd1" kindref="member">CBMPartitioningModule::onDisturbanceEvent</ref>,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notificationCenter.subscribe(signals::TimingStep,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMModuleBase_1ae0d870568aa17ea8c5b30bee241ee91a" kindref="member">CBMPartitioningModule::onTimingStep</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a52f3a5680a093913b1b16a149a8c9691" kindref="member">CBMPartitioningModule::doLocalDomainInit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a3424e1d107dc6d7d6aafcabafd2fe47d" kindref="member">_partition</ref><sp/>=<sp/>_landUnitData-&gt;getVariable(</highlight><highlight class="stringliteral">&quot;partition&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a3ed7c715d222a97074067306a7b1471f" kindref="member">_spinupParameters</ref><sp/>=<sp/>_landUnitData-&gt;getVariable(</highlight><highlight class="stringliteral">&quot;spinup_parameters&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1acf0f33d7d7092d81d017522ccc0bfc73" kindref="member">_spu</ref><sp/>=<sp/>_landUnitData-&gt;getVariable(</highlight><highlight class="stringliteral">&quot;spu&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ac109644e8f18587d55892c1c0e63ad2c" kindref="member">fetchRecoveryRules</ref>();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>distMortality<sp/>=<sp/>_landUnitData-&gt;getVariable(</highlight><highlight class="stringliteral">&quot;disturbance_mortality&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>row<sp/>:<sp/>distMortality-&gt;value().extract&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;DynamicObject&gt;&gt;())<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>disturbanceType<sp/>=<sp/>row[</highlight><highlight class="stringliteral">&quot;disturbance_type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spu<sp/>=<sp/>row[</highlight><highlight class="stringliteral">&quot;spu&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mortality<sp/>=<sp/>row[</highlight><highlight class="stringliteral">&quot;mortality&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a91bdc72c7f5ffd34697b6e4e68861195" kindref="member">_disturbanceMortality</ref>[disturbanceType][spu]<sp/>=<sp/>mortality;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>distCategories<sp/>=<sp/>_landUnitData-&gt;getVariable(</highlight><highlight class="stringliteral">&quot;disturbance_categories&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>row<sp/>:<sp/>distCategories-&gt;value().extract&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;DynamicObject&gt;&gt;())<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>disturbanceType<sp/>=<sp/>row[</highlight><highlight class="stringliteral">&quot;disturbance_type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>category<sp/>=<sp/>row[</highlight><highlight class="stringliteral">&quot;category&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ae1b3bc7e67bb44c338ae5c1c58baf17d" kindref="member">_disturbanceCategories</ref>[disturbanceType]<sp/>=<sp/>category;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>poolName<sp/>:<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SoftwoodMerch&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SoftwoodFoliage&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SoftwoodOther&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HardwoodMerch&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HardwoodFoliage&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HardwoodOther&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a520b6c37d8489ea667da597bad4654de" kindref="member">_agBiomassPools</ref>.push_back(_landUnitData-&gt;getPool(poolName));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>poolName<sp/>:<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SoftwoodMerch&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SoftwoodFoliage&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SoftwoodOther&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SoftwoodCoarseRoots&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SoftwoodFineRoots&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;HardwoodMerch&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HardwoodFoliage&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HardwoodOther&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HardwoodCoarseRoots&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HardwoodFineRoots&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a8fd9f8c8125f02f0361d955c9199ef4d" kindref="member">_totalBiomassPools</ref>.push_back(_landUnitData-&gt;getPool(poolName));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>poolName<sp/>:<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;SoftwoodMerch&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SoftwoodFoliage&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SoftwoodOther&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SoftwoodCoarseRoots&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SoftwoodFineRoots&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;HardwoodMerch&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HardwoodFoliage&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HardwoodOther&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HardwoodCoarseRoots&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HardwoodFineRoots&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;AboveGroundVeryFastSoil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BelowGroundVeryFastSoil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;AboveGroundFastSoil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BelowGroundFastSoil&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;MediumSoil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;AboveGroundSlowSoil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;BelowGroundSlowSoil&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SoftwoodStemSnag&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;SoftwoodBranchSnag&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;HardwoodStemSnag&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;HardwoodBranchSnag&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>})<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a77143dd664a36e795aa29f7694815504" kindref="member">_totalEcoPools</ref>.push_back(_landUnitData-&gt;getPool(poolName));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a00eaecef1d13bb30fe8fc63f68a68f64" kindref="member">CBMPartitioningModule::doTimingInit</ref>()<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a6ac8fb0c727e3b328dc8fabd9ea2f95c" kindref="member">_spuId</ref><sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1acf0f33d7d7092d81d017522ccc0bfc73" kindref="member">_spu</ref>-&gt;value();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ac2419dd3cd6d107d220bbda39ccab25c" kindref="member">_cumulativeMortality</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a98a6ebe7e0eba664ec47b1f57d3c99be" kindref="member">_pendingRecoveryRules</ref>.clear();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a7184fe463f4d1c23a6aa21de77e14ed2" kindref="member">_activeRecoveryRules</ref>.clear();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>spinup<sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a3ed7c715d222a97074067306a7b1471f" kindref="member">_spinupParameters</ref>-&gt;value();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>spinupParams<sp/>=<sp/>spinup.extract&lt;DynamicObject&gt;();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>lastPassDistType<sp/>=<sp/>spinupParams[</highlight><highlight class="stringliteral">&quot;last_pass_disturbance_type&quot;</highlight><highlight class="normal">].convert&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a3424e1d107dc6d7d6aafcabafd2fe47d" kindref="member">_partition</ref>-&gt;set_value(<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ae1b3bc7e67bb44c338ae5c1c58baf17d" kindref="member">_disturbanceCategories</ref>[lastPassDistType]);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lastPassRecoveryRule<sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a2e5afdb8416d32b91ff08283ac2ea66e" kindref="member">createInitialRecoveryRule</ref>(lastPassDistType);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastPassRecoveryRule<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastPassRecoveryRule-&gt;isSatisfied())<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a3424e1d107dc6d7d6aafcabafd2fe47d" kindref="member">_partition</ref>-&gt;set_value(</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a7184fe463f4d1c23a6aa21de77e14ed2" kindref="member">_activeRecoveryRules</ref>.push_back(lastPassRecoveryRule);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1aebf66910085b501e92872eb9e102d597" kindref="member">CBMPartitioningModule::doDisturbanceEvent</ref>(DynamicVar<sp/>e)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>data<sp/>=<sp/>e.extract&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>DynamicObject&gt;();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>disturbanceType<sp/>=<sp/>data[</highlight><highlight class="stringliteral">&quot;disturbance&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mortality<sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a91bdc72c7f5ffd34697b6e4e68861195" kindref="member">_disturbanceMortality</ref>[disturbanceType][<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a6ac8fb0c727e3b328dc8fabd9ea2f95c" kindref="member">_spuId</ref>];</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mortality<sp/>&lt;<sp/>0.2)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a64edbfd177fd40352bbfc5bc18efbab4" kindref="member">doSmallDisturbanceEvent</ref>(disturbanceType,<sp/>mortality);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a3c49cb7e0b9b611a28fe0f73636bee49" kindref="member">doLargeDisturbanceEvent</ref>(disturbanceType);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a64edbfd177fd40352bbfc5bc18efbab4" kindref="member">CBMPartitioningModule::doSmallDisturbanceEvent</ref>(std::string<sp/>disturbanceType,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mortality)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>disturbanceCategory<sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ae1b3bc7e67bb44c338ae5c1c58baf17d" kindref="member">_disturbanceCategories</ref>[disturbanceType];</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>currentCategory<sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a3424e1d107dc6d7d6aafcabafd2fe47d" kindref="member">_partition</ref>-&gt;value();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disturbanceCategory<sp/>==<sp/>currentCategory)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>recoveryRule<sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a0c5773c2f10945396b449ad2bbd3a924" kindref="member">createRecoveryRule</ref>(disturbanceType);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recoveryRule<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a7184fe463f4d1c23a6aa21de77e14ed2" kindref="member">_activeRecoveryRules</ref>.push_back(recoveryRule);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pendingRule<sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a0c5773c2f10945396b449ad2bbd3a924" kindref="member">createRecoveryRule</ref>(disturbanceType);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pendingRule<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a98a6ebe7e0eba664ec47b1f57d3c99be" kindref="member">_pendingRecoveryRules</ref>.push_back(pendingRule);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ac2419dd3cd6d107d220bbda39ccab25c" kindref="member">_cumulativeMortality</ref><sp/>+=<sp/>mortality;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ac2419dd3cd6d107d220bbda39ccab25c" kindref="member">_cumulativeMortality</ref><sp/>&gt;=<sp/>0.2)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a7184fe463f4d1c23a6aa21de77e14ed2" kindref="member">_activeRecoveryRules</ref><sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a98a6ebe7e0eba664ec47b1f57d3c99be" kindref="member">_pendingRecoveryRules</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a3424e1d107dc6d7d6aafcabafd2fe47d" kindref="member">_partition</ref>-&gt;set_value(disturbanceCategory);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a98a6ebe7e0eba664ec47b1f57d3c99be" kindref="member">_pendingRecoveryRules</ref>.clear();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ac2419dd3cd6d107d220bbda39ccab25c" kindref="member">_cumulativeMortality</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a3c49cb7e0b9b611a28fe0f73636bee49" kindref="member">CBMPartitioningModule::doLargeDisturbanceEvent</ref>(std::string<sp/>disturbanceType)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ac2419dd3cd6d107d220bbda39ccab25c" kindref="member">_cumulativeMortality</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>disturbanceCategory<sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ae1b3bc7e67bb44c338ae5c1c58baf17d" kindref="member">_disturbanceCategories</ref>[disturbanceType];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>currentCategory<sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a3424e1d107dc6d7d6aafcabafd2fe47d" kindref="member">_partition</ref>-&gt;value();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(disturbanceCategory<sp/>!=<sp/>currentCategory)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a7184fe463f4d1c23a6aa21de77e14ed2" kindref="member">_activeRecoveryRules</ref><sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a98a6ebe7e0eba664ec47b1f57d3c99be" kindref="member">_pendingRecoveryRules</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a3424e1d107dc6d7d6aafcabafd2fe47d" kindref="member">_partition</ref>-&gt;set_value(disturbanceCategory);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>recoveryRule<sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a0c5773c2f10945396b449ad2bbd3a924" kindref="member">createRecoveryRule</ref>(disturbanceType);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recoveryRule<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a7184fe463f4d1c23a6aa21de77e14ed2" kindref="member">_activeRecoveryRules</ref>.push_back(recoveryRule);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a98a6ebe7e0eba664ec47b1f57d3c99be" kindref="member">_pendingRecoveryRules</ref>.clear();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ad889c60334b0d6acf0797321f79dfd95" kindref="member">CBMPartitioningModule::doTimingStep</ref>()<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a7184fe463f4d1c23a6aa21de77e14ed2" kindref="member">_activeRecoveryRules</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>satisfiedRules<sp/>=<sp/>std::remove_if(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a7184fe463f4d1c23a6aa21de77e14ed2" kindref="member">_activeRecoveryRules</ref>.begin(),</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a7184fe463f4d1c23a6aa21de77e14ed2" kindref="member">_activeRecoveryRules</ref>.end(),</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](std::shared_ptr&lt;IRecoveryRule&gt;<sp/>rule)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>rule-&gt;isSatisfied();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(satisfiedRules<sp/>!=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a7184fe463f4d1c23a6aa21de77e14ed2" kindref="member">_activeRecoveryRules</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a7184fe463f4d1c23a6aa21de77e14ed2" kindref="member">_activeRecoveryRules</ref>.erase(satisfiedRules,<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a7184fe463f4d1c23a6aa21de77e14ed2" kindref="member">_activeRecoveryRules</ref>.end());</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a7184fe463f4d1c23a6aa21de77e14ed2" kindref="member">_activeRecoveryRules</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>currentCategory<sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a3424e1d107dc6d7d6aafcabafd2fe47d" kindref="member">_partition</ref>-&gt;value().convert&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a3424e1d107dc6d7d6aafcabafd2fe47d" kindref="member">_partition</ref>-&gt;set_value(currentCategory<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal"><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ac2419dd3cd6d107d220bbda39ccab25c" kindref="member">_cumulativeMortality</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a98a6ebe7e0eba664ec47b1f57d3c99be" kindref="member">_pendingRecoveryRules</ref>.clear();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ac109644e8f18587d55892c1c0e63ad2c" kindref="member">CBMPartitioningModule::fetchRecoveryRules</ref>()<sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>recoveryRules<sp/>=<sp/>_landUnitData-&gt;getVariable(</highlight><highlight class="stringliteral">&quot;recovery_rules&quot;</highlight><highlight class="normal">)-&gt;value();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(recoveryRules.isVector())<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>recoveryRule<sp/>:<sp/>recoveryRules.extract&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;DynamicObject&gt;&gt;())<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>disturbanceType<sp/>=<sp/>recoveryRule[</highlight><highlight class="stringliteral">&quot;disturbance_type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spu<sp/>=<sp/>recoveryRule[</highlight><highlight class="stringliteral">&quot;spu&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ruleType<sp/>=<sp/>recoveryRule[</highlight><highlight class="stringliteral">&quot;rule_type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ruleValue<sp/>=<sp/>recoveryRule[</highlight><highlight class="stringliteral">&quot;rule_value&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>spinup<sp/>=<sp/>recoveryRule[</highlight><highlight class="stringliteral">&quot;spinup&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spinup)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a948117ea63246a0d15b3a8db6e57d144" kindref="member">_initialRecoveryRules</ref>[disturbanceType][spu]<sp/>=<sp/>std::make_pair(ruleType,<sp/>ruleValue);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ad6fa4d215a9ce6187f4687e0df278a88" kindref="member">_recoveryRules</ref>[disturbanceType][spu]<sp/>=<sp/>std::make_pair(ruleType,<sp/>ruleValue);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>disturbanceType<sp/>=<sp/>recoveryRules[</highlight><highlight class="stringliteral">&quot;disturbance_type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spu<sp/>=<sp/>recoveryRules[</highlight><highlight class="stringliteral">&quot;spu&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ruleType<sp/>=<sp/>recoveryRules[</highlight><highlight class="stringliteral">&quot;rule_type&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ruleValue<sp/>=<sp/>recoveryRules[</highlight><highlight class="stringliteral">&quot;rule_value&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>spinup<sp/>=<sp/>recoveryRules[</highlight><highlight class="stringliteral">&quot;spinup&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spinup)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a948117ea63246a0d15b3a8db6e57d144" kindref="member">_initialRecoveryRules</ref>[disturbanceType][spu]<sp/>=<sp/>std::make_pair(ruleType,<sp/>ruleValue);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ad6fa4d215a9ce6187f4687e0df278a88" kindref="member">_recoveryRules</ref>[disturbanceType][spu]<sp/>=<sp/>std::make_pair(ruleType,<sp/>ruleValue);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;IRecoveryRule&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a2e5afdb8416d32b91ff08283ac2ea66e" kindref="member">CBMPartitioningModule::createInitialRecoveryRule</ref>(std::string<sp/>disturbanceType)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>distTypeRulesIt<sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a948117ea63246a0d15b3a8db6e57d144" kindref="member">_initialRecoveryRules</ref>.find(disturbanceType);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distTypeRulesIt<sp/>==<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a948117ea63246a0d15b3a8db6e57d144" kindref="member">_initialRecoveryRules</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>find<sp/>an<sp/>SPU-specific<sp/>recovery<sp/>rule<sp/>first,<sp/>then<sp/>fall<sp/>back<sp/>to<sp/>a<sp/>general<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>distTypeRules<sp/>=<sp/>distTypeRulesIt-&gt;second;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>distTypeRuleIt<sp/>=<sp/>distTypeRules.find(<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a6ac8fb0c727e3b328dc8fabd9ea2f95c" kindref="member">_spuId</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distTypeRuleIt<sp/>==<sp/>distTypeRules.end())<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distTypeRuleIt<sp/>=<sp/>distTypeRules.find(-1);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distTypeRuleIt<sp/>==<sp/>distTypeRules.end())<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>distTypeRuleConfig<sp/>=<sp/>distTypeRuleIt-&gt;second;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;IRecoveryRule&gt;<sp/>recoveryRule<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ruleType<sp/>=<sp/>std::get&lt;0&gt;(distTypeRuleConfig);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ruleType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;years_since_last_pass_disturbance&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target<sp/>=<sp/>std::get&lt;1&gt;(distTypeRuleConfig);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoveryRule<sp/>=<sp/>std::make_shared&lt;TimeRecoveryRule&gt;(_landUnitData.get(),<sp/>target,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>recoveryRule;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;IRecoveryRule&gt;<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a0c5773c2f10945396b449ad2bbd3a924" kindref="member">CBMPartitioningModule::createRecoveryRule</ref>(std::string<sp/>disturbanceType)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>distTypeRulesIt<sp/>=<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ad6fa4d215a9ce6187f4687e0df278a88" kindref="member">_recoveryRules</ref>.find(disturbanceType);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distTypeRulesIt<sp/>==<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1ad6fa4d215a9ce6187f4687e0df278a88" kindref="member">_recoveryRules</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>find<sp/>an<sp/>SPU-specific<sp/>recovery<sp/>rule<sp/>first,<sp/>then<sp/>fall<sp/>back<sp/>to<sp/>a<sp/>general<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>distTypeRules<sp/>=<sp/>distTypeRulesIt-&gt;second;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>distTypeRuleIt<sp/>=<sp/>distTypeRules.find(<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a6ac8fb0c727e3b328dc8fabd9ea2f95c" kindref="member">_spuId</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distTypeRuleIt<sp/>==<sp/>distTypeRules.end())<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distTypeRuleIt<sp/>=<sp/>distTypeRules.find(-1);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(distTypeRuleIt<sp/>==<sp/>distTypeRules.end())<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>distTypeRuleConfig<sp/>=<sp/>distTypeRuleIt-&gt;second;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;IRecoveryRule&gt;<sp/>recoveryRule<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ruleType<sp/>=<sp/>std::get&lt;0&gt;(distTypeRuleConfig);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ruleType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;years_since_disturbance&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>target<sp/>=<sp/>std::get&lt;1&gt;(distTypeRuleConfig);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoveryRule<sp/>=<sp/>std::make_shared&lt;TimeRecoveryRule&gt;(_landUnitData.get(),<sp/>target,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ruleType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;ag_biomass&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pool<sp/>:<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a520b6c37d8489ea667da597bad4654de" kindref="member">_agBiomassPools</ref>)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>+=<sp/>pool-&gt;value();</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoveryRule<sp/>=<sp/>std::make_shared&lt;CarbonRecoveryRule&gt;(<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a520b6c37d8489ea667da597bad4654de" kindref="member">_agBiomassPools</ref>,<sp/>target);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ruleType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;total_biomass&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pool<sp/>:<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a8fd9f8c8125f02f0361d955c9199ef4d" kindref="member">_totalBiomassPools</ref>)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>+=<sp/>pool-&gt;value();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoveryRule<sp/>=<sp/>std::make_shared&lt;CarbonRecoveryRule&gt;(<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a8fd9f8c8125f02f0361d955c9199ef4d" kindref="member">_totalBiomassPools</ref>,<sp/>target);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ruleType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;total_eco&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>target<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pool<sp/>:<sp/><ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a77143dd664a36e795aa29f7694815504" kindref="member">_totalEcoPools</ref>)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target<sp/>+=<sp/>pool-&gt;value();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoveryRule<sp/>=<sp/>std::make_shared&lt;CarbonRecoveryRule&gt;(<ref refid="classmoja_1_1modules_1_1cbm_1_1CBMPartitioningModule_1a77143dd664a36e795aa29f7694815504" kindref="member">_totalEcoPools</ref>,<sp/>target);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>recoveryRule;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">}}}</highlight></codeline>
    </programlisting>
    <location file="/mnt/e/moja.canada/Source/moja.modules.cbm/src/cbmpartitioningmodule.cpp"/>
  </compounddef>
</doxygen>
